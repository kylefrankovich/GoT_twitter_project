library(plotly)
library(dplyr)
library(ggplotly)
installed.packages('ggplotly')
library(ggplotly)
blah = c(0,1,0,1,0)
mean(blah)
blah = c(0,1,0,1)
mean(blah)
blah = c(0,1,0,1,NaN)
mean(blah)
mean(blah, na.rm=TRUE) # returns 2
blah
blah = c(0,1,0,1,NaN,0,0,0,NaN)
mean(blah, na.rm=TRUE) # returns 2
2/7
blah = c(0,1,0,1,99,0,0,0,99)
mean(blah)
blah[blah==99]=NaN
blah
mean(blah)
mean(blah, na.rm=TRUE)
library(ggplot2)
library(plotly)
library(tidyr)
library(dplyr)
setwd('/Users/kfranko/Desktop/GoT_twitter_project/data_viz/')
fname = 'df_eps1_4.csv'
df <- read.csv(fname, header = TRUE)
View(df)
df2 <- read.csv(fname, header = FALSE)
View(df2)
rm(df2)
character_threshold <- filter(df, count_percent > 1)
df_filtered = filter(df, names %in% character_threshold$names)
episodes_1_4_plot <- plot_ly(
x = df_filtered$names,
y = df_filtered$count_percent,
name = "GoT character mentions ep 2 - 48 hours",
type = "bar",
color = df_filtered$episode,
)
episodes_1_4_plot
episodes_1_4_plot <-ggplot(df_filtered,
aes(x=factor(names),y=count_percent,
fill=factor(episode)), color=factor(episode)) +
stat_summary(fun.y=mean,position=position_dodge(),geom="bar")
ggplotly(episodes_1_4_plot)
library(dplyr)
library(ggplot2)
# set working directory (data folder)
setwd("~/Google Drive/Young_Hall_data_analysis/Young_Hall_behavioral_data")
plot_path = ("~/Google Drive/Young_Hall_data_analysis/LOTP data plots/LOTP_ladies_and_gentlemen/")
exclSubs = c()
df <- read.table('YH_LOTP_ladies_and_gentlemen_mk2.txt', stringsAsFactor = FALSE, header = TRUE) %>%
filter(!SubID %in% exclSubs)
head(df)
length(unique(df$SubID))
sub.mn <- df %>%
group_by(TOA, trainLength, SubID, centralized) %>%
summarise(
mrt = mean(RT),
acc = mean(Correct))
sub.mn_centralized_non_norml = sub.mn
grp.mn <- summarise(sub.mn,
grt = mean(mrt),
gac = mean(acc))
grp.mn_centralized = grp.mn
sub.mn <- sub.mn %>%
group_by(SubID) %>%
mutate(
submean = mean(acc)) %>%
ungroup() %>%
mutate(
grandmn = mean(acc)) %>%
group_by(trainLength, TOA, SubID, centralized) %>%
mutate(
acc.nor = (acc - submean) + grandmn)
sub.mn_centralized_norml = sub.mn
sub.mn.lateralized = filter(sub.mn, centralized == 0)
sub.mn.centralized = filter(sub.mn, centralized == 1)
ggplot(sub.mn.lateralized, aes(trainLength, acc.nor, color = factor(TOA)))+
labs(x = 'Train Length', y = 'Accuracy (%)', title = "lateralized", color = 'TOA (ms)')+
scale_x_continuous(breaks = 1:4)+
scale_y_continuous(labels = function(x) x * 100)+
stat_summary(fun.data = mean_cl_normal, geom = 'pointrange', size = 1.5) +
stat_summary(fun.y = mean, geom = 'line', size = 1.5) +
theme_bw(base_size = 20)
ggplot(sub.mn.centralized, aes(trainLength, acc.nor, color = factor(TOA)))+
labs(x = 'Train Length', y = 'Accuracy (%)', title = "centralized", color = 'TOA (ms)')+
scale_x_continuous(breaks = 1:4)+
scale_y_continuous(labels = function(x) x * 100)+
stat_summary(fun.data = mean_cl_normal, geom = 'pointrange', size = 1.5) +
stat_summary(fun.y = mean, geom = 'line', size = 1.5) +
theme_bw(base_size = 20)
ggplot(sub.mn, aes(trainLength, acc.nor, shape = factor(centralized), color = factor(TOA)))+
labs(x = 'Train Length', y = 'Accuracy (%)',
title = "centralized and lateralized", color = 'TOA (ms)')+
scale_x_continuous(breaks = 1:4)+
scale_y_continuous(labels = function(x) x * 100)+
stat_summary(fun.data = mean_cl_normal, geom = 'pointrange', size = 1.5) +
stat_summary(fun.y = mean, geom = 'line', size = 1.5) +
theme_bw(base_size = 20)
character_threshold <- filter(df, count_percent > 1)
df_filtered = filter(df, names %in% character_threshold$names)
character_threshold <- filter(df, count_percent > 1)
df_filtered = filter(df, names %in% character_threshold$names)
setwd('/Users/kfranko/Desktop/GoT_twitter_project/data_viz/')
fname = 'df_eps1_4.csv'
df <- read.csv(fname, header = TRUE)
character_threshold <- filter(df, count_percent > 1)
df_filtered = filter(df, names %in% character_threshold$names)
setwd('/Users/kfranko/Desktop/GoT_twitter_project/data_viz/')
fname = 'df_eps1_4.csv'
df <- read.csv(fname, header = TRUE)
character_threshold <- filter(df, count_percent > 1)
df_filtered = filter(df, names %in% character_threshold$names)
episodes_1_4_plot<-ggplot(df_filtered,
aes(x=factor(names),y=count_percent,
fill=factor(episode)), color=factor(episode)) +
stat_summary(fun.y=mean,position=position_dodge(),geom="bar")
ggplotly(episodes_1_4_plot)
View(df_filtered)
View(df)
brienne_tormund = c('brienne', 'tormund')
df_brienne_tormund = filter(df, names %in% brienne_tormund)
View(df_brienne_tormund)
episodes_1_4_plot<-ggplot(df_filtered,
aes(x=factor(names),y=count_percent,
fill=factor(episode)), color=factor(episode)) +
labs(x = 'names', y = 'percentage of character mentions', title = 'Character Mentions by Episode') +
stat_summary(fun.y=mean,position=position_dodge(),geom="bar")
ggplotly(episodes_1_4_plot)
dat1 <- data.frame(
sex = factor(c("Female","Female","Male","Male")),
time = factor(c("Lunch","Dinner","Lunch","Dinner"), levels=c("Lunch","Dinner")),
total_bill = c(13.53, 16.81, 16.24, 17.42)
time = factor(c("Lunch","Dinner","Lunch","Dinner"), levels=c("Lunch","Dinner")),
total_bill = c(13.53, 16.81, 16.24, 17.42)
)
dat1 <- data.frame(
sex = factor(c("Female","Female","Male","Male")),
time = factor(c("Lunch","Dinner","Lunch","Dinner"), levels=c("Lunch","Dinner")),
total_bill = c(13.53, 16.81, 16.24, 17.42)
)
View(dat1)
ggplot(data=dat1, aes(x=time, y=total_bill, group=sex, colour=sex)) +
geom_line() +
geom_point()
ggplot(data=df_brienne_tormund, aes(x=episode, y=count_percent, group=names, colour=names)) +
geom_line() +
geom_point()
ggplot(data=df_brienne_tormund, aes(x=episode, y=count_percent, group=names, colour=names)) +
geom_line() +
labs(x = 'Episode', y = 'percentage of mentions', title = "Brienne and Tormund <3")+
geom_point()
ggplot(data=df_brienne_tormund, aes(x=episode, y=count_percent, group=names, colour=names)) +
geom_line() +
labs(x = 'Episode', y = 'percentage of mentions', title = "Brienne and Tormund <3", colour = 'lovebirds')+
geom_point()
ggplot(data=df_brienne_tormund, aes(x=episode, y=count_percent, group=names, colour=names)) +
geom_line() +
labs(x = 'Episode', y = 'percentage of mentions', title = "Brienne and Tormund <3", colour = 'lovebirds')+
geom_point() +
theme_bw(base_size = 20)
ggplot(data=df_brienne_tormund, aes(x=episode, y=count_percent, group=names, colour=names)) +
geom_line() +
labs(x = 'Episode', y = 'percentage of mentions', title = "Brienne and Tormund <3", colour = 'lovebirds')+
geom_point() +
theme_bw(base_size = 15)
ggplot(data=df_brienne_tormund, aes(x=episode, y=count_percent, group=names, colour=names)) +
geom_line(size=2) +
labs(x = 'Episode', y = 'percentage of mentions', title = "Brienne and Tormund <3", colour = 'lovebirds')+
geom_point() +
theme_bw(base_size = 15)
ggplot(data=df_brienne_tormund, aes(x=episode, y=count_percent, group=names, colour=names)) +
geom_line(size=2) +
labs(x = 'Episode', y = 'percentage of mentions', title = "Brienne and Tormund <3", colour = 'lovebirds')+
geom_point(size=2) +
theme_bw(base_size = 15)
ggplot(data=df_brienne_tormund, aes(x=episode, y=count_percent, group=names, colour=names)) +
geom_line(size=1.5) +
labs(x = 'Episode', y = 'percentage of mentions', title = "Brienne and Tormund <3", colour = 'lovebirds')+
geom_point(size=2) +
theme_bw(base_size = 15)
ggplot(data=df_brienne_tormund, aes(x=episode, y=count_percent, group=names, colour=names)) +
geom_line(size=1.5) +
labs(x = 'Episode', y = 'percentage of mentions', title = "Brienne and Tormund <3", colour = 'lovebirds')+
geom_point(size=2.5) +
theme_bw(base_size = 15)
brienne_tormund_line_plot = ggplot(data=df_brienne_tormund, aes(x=episode, y=count_percent, group=names, colour=names)) +
geom_line(size=1.5) +
labs(x = 'Episode', y = 'percentage of mentions', title = "Brienne and Tormund <3", colour = 'lovebirds')+
geom_point(size=2.5) +
theme_bw(base_size = 15)
ggplotly(brienne_tormund_line_plot)
brienne_tormund_line_plot = ggplot(data=df_brienne_tormund, aes(x=episode, y=count_percent, group=names, colour=names)) +
geom_line() +
labs(x = 'Episode', y = 'percentage of mentions', title = "Brienne and Tormund <3", colour = 'lovebirds')+
geom_point() +
#theme_bw(base_size = 15)
ggplotly(brienne_tormund_line_plot)
brienne_tormund_line_plot = ggplot(data=df_brienne_tormund, aes(x=episode, y=count_percent, group=names, colour=names)) +
geom_line() +
labs(x = 'Episode', y = 'percentage of mentions', title = "Brienne and Tormund <3", colour = 'lovebirds')+
geom_point()
#theme_bw(base_size = 15)
ggplotly(brienne_tormund_line_plot)
brienne_tormund_line_plot = ggplot(data=df_brienne_tormund, aes(x=episode, y=count_percent, group=names, colour=names)) +
geom_line() +
labs(x = 'episode', y = 'percentage of mentions', title = "Brienne and Tormund <3", colour = 'lovebirds')+
geom_point(size = 1.5)
#theme_bw(base_size = 15)
ggplotly(brienne_tormund_line_plot)
brienne_tormund_line_plot = ggplot(data=df_brienne_tormund, aes(x=episode, y=count_percent, group=names, colour=names)) +
geom_line() +
labs(x = 'episode', y = 'percentage of mentions', title = "Brienne and Tormund <3", colour = 'lovebirds')+
geom_point(size = 2)
#theme_bw(base_size = 15)
ggplotly(brienne_tormund_line_plot)
Sys.setenv("plotly_username"="kyle.frankovich")
Sys.setenv("plotly_api_key"="r5kz3hc8a1")
ggplotly(brienne_tormund_line_plot)
plotly_POST(brienne_tormund_line_plot, filename = "brienne_tormund_plot", world_readable=TRUE)
brienne_tormund_line_plot = ggplot(data=df_brienne_tormund,
aes(x=episode, y=count_percent,
group=names, colour=names)) +
geom_line() +
labs(x = 'episode', y = 'percentage of mentions',
title = "Brienne and Tormund <3", colour = 'lovebirds')+
geom_point(size = 2)
#theme_bw(base_size = 15)
ggplotly(brienne_tormund_line_plot)
ep1_day_1_tweets = 244132
ep1_day_2_tweets = 121301
ep1_tweets = ep1_day_1_tweets+ep1_day_2_tweets
ep2_tweets = 705818
ep3_tweets = 352080
ep4_tweets = 405785
total_tweets_1_4 = ep1_tweets+ep2_tweets+ep3_tweets+ep4_tweets
total_tweets_1_4
total_tweets_1_4/4
