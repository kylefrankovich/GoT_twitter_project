library(plotly)
library(dplyr)
library(ggplotly)
installed.packages('ggplotly')
library(ggplotly)
blah = c(0,1,0,1,0)
mean(blah)
blah = c(0,1,0,1)
mean(blah)
blah = c(0,1,0,1,NaN)
mean(blah)
mean(blah, na.rm=TRUE) # returns 2
blah
blah = c(0,1,0,1,NaN,0,0,0,NaN)
mean(blah, na.rm=TRUE) # returns 2
2/7
blah = c(0,1,0,1,99,0,0,0,99)
mean(blah)
blah[blah==99]=NaN
blah
mean(blah)
mean(blah, na.rm=TRUE)
library(ggplot2)
library(plotly)
library(tidyr)
library(dplyr)
library(rCharts)
setwd('/Users/kfranko/Desktop/GoT_twitter_project/data_viz/')
fname = 'df_eps1_5.csv'
df <- read.csv(fname, header = TRUE)
brienne_tormund = c('brienne', 'tormund')
df_brienne_tormund = filter(df, names %in% brienne_tormund)
View(df_brienne_tormund)
brienne_tormund_line_plot = ggplot(data=df_brienne_tormund,
aes(x=episode, y=count_percent_rounded,
group=names, colour=names)) +
geom_line() +
labs(x = 'episode', y = 'percentage of mentions',
title = "Brienne and Tormund <3", colour = 'lovebirds')+
geom_point(size = 2)
#theme_bw(base_size = 15)
brienne_tormund_line_plot
brienne.tormund.line.rcharts <- hPlot(x='episode',
y='count_percent_rounded',
group='names',
data=df_brienne_tormund,
type="line",
title='Character mentions by episode')
brienne.tormund.line.rcharts$yAxis(title = list(text = "percentage of mentions"))
brienne.tormund.line.rcharts$xAxis(title = list(text = "episode"),
tickInterval = 1)
# women.of.thrones.line.rcharts$xAxis(minorTicknterval = 'null')
brienne.tormund.line.rcharts$plotOptions(series = list(lineWidth = 4))
brienne.tormund.line.rcharts
View(df)
character_threshold <- filter(df, count_percent > 5)
df_filtered = filter(df, names %in% character_threshold$names)
episodes_1_5_plot<-ggplot(df_filtered,
aes(x=factor(names),y=count_percent,
fill=factor(episode)), color=factor(episode)) +
labs(x = 'names', y = 'percentage of character mentions',
title = 'Character Mentions by Episode') +
stat_summary(fun.y=mean,position=position_dodge(),geom="bar")
episodes_1_5_plot
View(df_brienne_tormund)
brienne.tormund.line.rcharts$show('iframesrc', cdn=TRUE)
setwd("~/Google Drive/Young_Hall_data_analysis/Young_Hall_behavioral_data")
# Load Data
df <- read.table('YH_LOTP_mk4_data.txt', stringsAsFactor = FALSE, header = TRUE)
head(df)
# subject number
length(unique(df$SubID))
sub.mn <- df %>%
group_by(TOA, trainLength, SubID) %>%
summarise(
mrt = mean(RT),
acc = mean(Correct))
# group means
grp.mn <- summarise(sub.mn,
grt = mean(mrt),
gac = mean(acc))
grp.mn_mk4 = grp.mn
# Normalize ACC
sub.mn <- sub.mn %>%
group_by(SubID) %>%
mutate(
submean = mean(acc)) %>%
ungroup() %>%
mutate(
grandmn = mean(acc)) %>%
group_by(trainLength, TOA, SubID) %>%
mutate(
acc.nor = (acc - submean) + grandmn)
sub.mn_650_mk4 = mutate(filter(sub.mn, TOA == 650, trainLength < 7),
expNum = 1)
ggplot(sub.mn, aes(trainLength, acc.nor, color = factor(TOA)))+
labs(x = 'Train Length', y = 'Accuracy (%)', color = 'TOA (ms)')+
scale_x_continuous(breaks = 1:6)+
scale_y_continuous(labels = function(x) x * 100)+
stat_summary(fun.data = mean_cl_normal, geom = 'pointrange', size = 1.5) +
stat_summary(fun.y = mean, geom = 'line', size = 1.5) +
theme_bw(base_size = 20)
setwd('/Users/kfranko/Desktop/GoT_twitter_project/data_viz/')
fname = 'df_eps1_5.csv'
df <- read.csv(fname, header = TRUE)
View(df_filtered)
View(df)
View(df_brienne_tormund)
View(df)
